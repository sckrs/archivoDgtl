# Generated by Django 2.0.5 on 2018-09-28 19:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('cargo', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.IntegerField(default=1)),
                ('extension', models.IntegerField(default=1)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='fotoUsuarios')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_area', models.CharField(choices=[('desarrolladorDelSitio', 'desarrolladorDelSitio'), ('Direccion General', 'Direccion General'), ('Dirección Academica', 'Dirección Academica'), ('Subdirección de Investigación', 'Subdirección de Investigación'), ('Coordinación de Intercambios', 'Coordinación de Intercambios'), ('Coordinación de Proyectos', 'Coordinación de Proyectos'), ('Subdirección de Docencia', 'Subdirección de Docencia'), ('Coordinación de Servicios Escolares', 'Coordinación de Servicios Escolares'), ('Posgrado en la CDMX', 'Posgrado en la CDMX'), ('Posgrado en LINGÜÍSTICA', 'Posgrado en LINGÜÍSTICA'), ('Posgrado en OCCIDENTE', 'Posgrado en OCCIDENTE'), ('Posgrado en SURESTE', 'Posgrado en SURESTE'), ('Posgrado en GOLFO', 'Posgrado en GOLFO'), ('Posgrado en PENINSULAR', 'Posgrado en PENINSULAR'), ('Posgrado en NORESTE', 'Posgrado en NORESTE'), ('Subdirección de Bibliotecas', 'Subdirección de Bibliotecas'), ('Subdirección de Difusión y Publicaciones', 'Subdirección de Difusión y Publicaciones'), ('Coordinación de Publicaciones', 'Coordinación de Publicaciones'), ('Coordinación de difusión', 'Coordinación de difusión'), ('Subdirección de Informática', 'Subdirección de Informática'), ('Coordinación de Sistemas', 'Coordinación de Sistemas'), ('Dirección de Vinculación', 'Dirección de Vinculación'), ('Dirección de Administración', 'Dirección de Administración'), ('Coordinación de Planeación y Control', 'Coordinación de Planeación y Control'), ('Unidad de Trasparencia', 'Unidad de Trasparencia'), ('Subdirección de Recursos Financieros', 'Subdirección de Recursos Financieros'), ('Jefatura de Presupuestos', 'Jefatura de Presupuestos'), ('Jefatura de Contabilidad', 'Jefatura de Contabilidad'), ('Jefatura de Recursos Humanos', 'Jefatura de Recursos Humanos'), ('Jefatura de Servicios Generales', 'Jefatura de Servicios Generales'), ('Jefatura de Recursos Materiales', 'Jefatura de Recursos Materiales'), ('Coordinación de Archivo', 'Coordinación de Archivo'), ('Coordinación de Admin Financiera de Proyectos', 'Coordinación de Admin Financiera de Proyectos'), ('Unidades Regionales', 'Unidades Regionales'), ('Dirección Regional Golfo', 'Dirección Regional Golfo'), ('Dirección Regional Pacifico Sur', 'Dirección Regional Pacifico Sur'), ('Dirección General Sureste', 'Dirección General Sureste'), ('Dirección General Occidente', 'Dirección General Occidente'), ('Dirección Regional Peninsular', 'Dirección Regional Peninsular'), ('Dirección Regional Noreste', 'Dirección Regional Noreste'), ('Jefatura de Administración', 'Jefatura de Administración'), ('Jefatura de Biblioteca', 'Jefatura de Biblioteca')], max_length=150)),
                ('tipo_de_area', models.CharField(choices=[('Dirección', 'Dirección'), ('Subdirección', 'Subdirección'), ('Coordinación/Jefatura', 'Coordinación/Jefatura')], default='Coordinación/Jefatura', max_length=150)),
                ('es_area_restringida', models.BooleanField(default=False)),
                ('codigo_restriccion', models.CharField(blank=True, max_length=15, null=True)),
                ('clave_area', models.CharField(max_length=15, unique=True)),
                ('clave_area_num', models.IntegerField(blank=True, null=True)),
                ('subarea', models.ForeignKey(blank=True, null=True, on_delete='CASCADE', to='archivoDigital.Area')),
            ],
            options={
                'verbose_name': 'Area',
                'verbose_name_plural': 'Areas',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='area',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='archivoDigital.Area'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
